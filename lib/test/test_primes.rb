#!/usr/bin/env ruby

require_relative '../paillier'
require 'test/unit'

class TestPrimes < Test::Unit::TestCase #:nodoc:

	def testIsProbablyPrime
		known_primes = [15484279, 32451217, 86027297, 179424097, 982451653, 2038072919, 18125114801, 22801762469]
		for p in known_primes
			assert_equal(Paillier::Primes.isProbablyPrime?(p), true)
		end
        large_primes = [ 94366396730334173383107353049414959521528815310548187030165936229578960209523421808912459795329035203510284576187160076386643700441216547732914250578934261891510827140267043592007225160798348913639472564715055445201512461359359488795427875530231001298552452230535485049737222714000227878890892901228389026881, 138028649176899647846076023812164793645371887571371559091892986639999096471811910222267538577825033963552683101137782650479906670021895135954212738694784814783986671046107023185842481502719762055887490765764329237651328922972514308635045190654896041748716218441926626988737664133219271115413563418353821396401, 123301261697053560451930527879636974557474268923771832437126939266601921428796348203611050423256894847735769138870460373141723679005090549101566289920247264982095246187318303659027201708559916949810035265951104246512008259674244307851578647894027803356820480862664695522389066327012330793517771435385653616841 ]
        for p in large_primes
            assert_equal(Paillier::Primes.isProbablyPrime?(p), true)
        end
	end

	def testNotPrime
		known_composites = [15484281, 32451219, 179424099, 982451655, 2038072922, 18125114811, 22801762471]
		for p in known_composites
			assert_equal(Paillier::Primes.isProbablyPrime?(p), false)
		end
	end

	def testIsCoprime
		assert_equal(Paillier::Primes.isCoprime?(12, 19), true)
		assert_equal(Paillier::Primes.isCoprime?(12, 11), true)
		assert_equal(Paillier::Primes.isCoprime?(28, 29), true)
		assert_equal(Paillier::Primes.isCoprime?(28, 15), true)
	end

	def testIsNotCoprime
		assert_equal(Paillier::Primes.isCoprime?(12, 6), false)
		assert_equal(Paillier::Primes.isCoprime?(21, 7), false)
		assert_equal(Paillier::Primes.isCoprime?(28, 14), false)
		assert_equal(Paillier::Primes.isCoprime?(28, 12), false)
	end

end
